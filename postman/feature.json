{
	"info": {
		"_postman_id": "58e87119-816c-4176-ab8c-74c607673877",
		"name": "Explore with me - feature",
		"description": "test for rating functions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26411586"
	},
	"item": [
		{
			"name": "Create Entity",
			"item": [
				{
					"name": "Create user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"user1Id\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user1@mail.com');\r",
									"    pm.expect(jsonData.name).to.eql('User name');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user1@mail.com\",\r\n    \"name\": \"User name\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"user2Id\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user2@mail.com');\r",
									"    pm.expect(jsonData.name).to.eql('User SecondName');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user2@mail.com\",\r\n    \"name\": \"User SecondName\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"user3Id\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user3@mail.com');\r",
									"    pm.expect(jsonData.name).to.eql('User ThirdName');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user3@mail.com\",\r\n    \"name\": \"User ThirdName\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"categoryId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create category\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('CategoryTest');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"CategoryTest\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create event by user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"eventId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create event\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.initiator.name).to.eql('User name');\r",
									"    pm.expect(jsonData.state).to.eql('PENDING');\r",
									"    pm.expect(jsonData.rating).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"interesting astonishment event\",\r\n    \"category\":{{categoryId}},\r\n    \"description\":\"Testing event and new like feature\",\r\n    \"eventDate\":\"2023-10-10 20:00:00\",\r\n    \"location\":\r\n        {\r\n        \"lat\":-23.541,\r\n        \"lon\":14.54\r\n        },\r\n    \"paid\":\"false\",\r\n    \"participantLimit\":\"400\",\r\n    \"requestModeration\":true,\r\n    \"title\":\"Test event title\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/users/:userId/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								":userId",
								"events"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{user1Id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create rate requests",
			"item": [
				{
					"name": "rate to not published event 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400,409]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"10\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Publish event 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Event state changed to PUBLISHED\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.state).to.eql('PUBLISHED')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/admin/events/:eventId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								":eventId"
							],
							"variable": [
								{
									"key": "eventId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "rate to published event 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Add like to event 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.rate).to.eql(2)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"2\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "rate to published event again 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Add like to event 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.rate).to.eql(4)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"4\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get event after rates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Event must has average rating 3\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.state).to.eql('PUBLISHED');\r",
									"    pm.expect(jsonData.rating).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/events/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete rate from user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/rating/:userId/:ratingId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId",
								":ratingId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								},
								{
									"key": "ratingId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get event after delete rate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Event must has updated rating 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.state).to.eql('PUBLISHED');\r",
									"    pm.expect(jsonData.rating).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/events/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "Rating 0 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"0\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rating 30 409",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"30\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rating event with wrong user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"30\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rating event with wrong event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.expect(pm.response.code).to.be.eql(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventId\": \"1\",\r\n    \"rate\": \"30\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/rating/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"rating",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9090"
		}
	]
}